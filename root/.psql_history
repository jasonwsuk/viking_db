<<<<<<< HEAD
select * from pg_shadow;
=======
create user dbmasteruser with createdb replication createrole password 'sukiyo';
create database flask_pybo;
select * from pg_shadow;
\du
GRANT BYPASSRLS ON DATABASE flask_pybo TO dbmasteruser;
GRANT ALL PRIVILEGES ON DATABASE flask_pybo TO dbmasteruser;
\du
\du
GRANT SUPERUSER ON DATABASE flask_pybo TO dbmasteruser;
GRANT ALL PRIVILEGES ON DATABASE flask_pybo TO dbmasteruser;
select * from pg_shadow;
show databases;
show database;
show database flask_pybo;
show database;
show database postgres;
show * from postgres;
select * from flask_pybo;
GRANT SELECT ON DATABASE flask_pybo TO dbmasteruser;
GRANT ALL PRIVILEGES ON ALL FUNCTIONS IN SCHEMA flask_pybo TO dbmasteruser;
SHOW DATABASES;
SHOW SCHEMA;
SHOW SCHEMAS;
SHOW SCHEMA;
SHOW DATABASE flask_pybo;
\d
\a
\h
\dS
\dn
\l
select session_user;
GRANT ALL PRIVILEGES ON SCHEMA public FROM dbmasteruser;
GRANT ALL PRIVILEGES ON SCHEMA public FROM PUBLIC;
GRANT ALL PRIVILEGES ON SCHEMA public FROM public.;
GRANT ALL PRIVILEGES ON SCHEMA public TO dbmasteruser;
GRANT ALL PRIVILEGES ON DATABASE flask_pybo TO dbmasteruser;
GRANT ALL PRIVILEGES ON SCHEMA public TO PUBLIC;
GRANT ALL PRIVILEGES ON SCHEMA public TO dbmasteruser;
GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO dbmasteruser;
GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA public TO dbmasteruser;
GRANT USAGE ON SCHEMA public TO dbmasteruser;
GRANT CONNECT ON DATABASE flask_pybo TO dbmasteruser;
SELECT * FROM pg_shadow;
select database flask_pybo;
use flask_pybo;
use database flask_pybo;
\l
\d
\dt
\dt flask_pybo
\d+
\dt
\t
\t
\q
create database dbmasteruser;
\l
\q
select * from pg_shadow;
grant superuser on database dbmasteruser to dbmasteruser;
\q
GRANT SUPERUSER ON DATABASE dbmasteruser TO dbmasteruser ;
GRANT ALL PRIVILEGES ON ALL FUNCTIONS IN SCHEMA dbmasteruser;
GRANT ALL PRIVILEGES ON ALL FUNCTIONS IN SCHEMA dbmasteruser TO dbmasteruser;
GRANT ALL PRIVILEGES ON DATABASE dbmasteruser TO dbmasteruser;
\q
select * from pg_shadow;
\q;
\q
GRANT ALL PRIVILEGES ON DATABASE pg_shadow TO dbmasteruser;
SELECT * FROM pg_shadow;
schema pg_shadow;
select * from pg_user;
\du
show databases;
\d
\w
\t
\t
\l
delete database flask_pybo;
remove database flask_pybo;
REMOVE DATABASE flask_pybo;
DELETE DATABASE flask_pybo;
DELETE flask_pybo;
SELECT * FROM pg_user WHERE schemaname='dbmasteruser';
SELECT * FROM pg_user WHERE username='dbmasteruser';
SELECT * FROM pg_user WHERE name='dbmasteruser';
SELECT * FROM pg_user WHERE Name='dbmasteruser';
SELECT * FROM pg_user WHERE usename='dbmasteruser';
DROP DATABASE flask_pybo;
CREATE DATABASE flask_pybo WITH OWNER=dbmasteruser;
DROP DATABASE dbmasteruser;
CREATE DATABASE dbmasteruser WITH OWNER=dbmasteruser;
\q
\l
\c flask_pybo dbmasteruser;
SELECT * FROM flask_pybo;
\l
GRANT ALL PRIVILEGES ON DATABASE flask_pybo TO dbmasteruser;
\l
SELECT * FROM flask_pybo;
show database;
show database all;
show database flask_pybo ;
show data_directory;
show data_directory;
select oid as database_id,datname as database_name,datallowconn as allow_connect,datconnlimit as connection_limitfrom pg_databaseorder by oid;
>>>>>>> 3490362b43f621bd4c9cd9d60a6072e3338057a0
